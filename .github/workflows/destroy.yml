name: 'Destroy'

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform_AWS:
    runs-on: ubuntu-latest
    env: 
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      TF_VAR_my_ip: ${{ secrets.MY_IP }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    # Get the public IP of the github runner to use in TF code
    - name: Runner IP
      id: Runner_IP
      run: |
        echo "TF_VAR_runner_ip=$(curl ifconfig.me)" >> $GITHUB_ENV

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check -recursive

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init Storage
      working-directory: ./Storage
      run: terraform init -backend-config="backend.hcl"

    # Applies Terraform config to output storage id for destroy action
    - name: Terraform Apply Storage
      working-directory: ./Storage
      run: terraform apply -auto-approve

    # Stores the output storage_id to an environment variable to use in destroy action
    - name: Variables Storage
      working-directory: ./Storage
      run: |
        echo "TF_VAR_storage_id=$(terraform output storage_id | sed 's/"//g')" >> $GITHUB_ENV
        sleep 10s

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init AWS
      working-directory: ./Infra
      run: terraform init -backend-config="backend.hcl"

    # Destroys AWS infra
    - name: Terraform Destroy AWS
      id: AWS_Destroy
      working-directory: ./Infra
      run: terraform destroy -auto-approve