name: 'Destroy'

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform_AWS:
    runs-on: ubuntu-latest
    env: 
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}   
      TF_VAR_my_ip: ${{ secrets.MY_IP }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check -recursive

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: ./Infra
      run: |
        terraform init -backend-config="backend.hcl"
        terraform refresh

    - name: Set some environment variables
      working-directory: ./Infra
      run: |
        echo "$(terraform output secret_key)" >> ../Docker/id_rsa
        chmod 0400 ../Docker/id_rsa
        echo "TF_VAR_instance_ip=$(terraform output instance_ip | sed 's/"//g')" >> $GITHUB_ENV
  
    - name: Fetch game files
      run: |
        scp -r -i ./Docker/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ env.TF_VAR_instance_ip }}:/data/Pal/Saved/SaveGames ./SaveGames/
    
    - name: Copy game files to S3
      uses: jakejarvis/s3-sync-action@master
      env:
        AWS_S3_BUCKET: game-files-maximumpigs
        AWS_REGION: ap-southeast-2
        SOURCE_DIR: ./SaveGames
        DEST_DIR: /palworld/SaveGames

    # Destroys AWS infra
    - name: Terraform Destroy AWS
      id: AWS_Destroy
      working-directory: ./Infra
      run: terraform destroy -auto-approve