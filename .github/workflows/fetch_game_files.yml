name: 'Fetch Game Files'

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform_AWS:
    runs-on: ubuntu-latest
    env: 
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}   

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check -recursive

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init AWS
      working-directory: ./Infra
      run: terraform init -backend-config="backend.hcl"

    - name: Set some environment variables
      working-directory: ./Infra
      run: |
        echo "TF_VAR_instance_ip=$(terraform output instance_ip | sed 's/"//g')" >> $GITHUB_ENV
        {
          echo 'SSH_KEY<<EOF'
          terraform output secret_key
          echo EOF
        } >> "$GITHUB_ENV"
        echo "::add-mask::$SSH_KEY"

    - name: Inject SSH key
      uses: webfactory/ssh-agent@v0.8.0
      with:
          ssh-private-key: ${{ github.env.SSH_KEY }}

    - name: Fetch game files
      run: |
        scp ubuntu@${{ github.env.TF_VAR_instance_ip }}:/data/Pal/Saved/SaveGames /tmp/SaveGames

    - name: Copy game files to S3
      run: |
        aws s3 cp /tmp/SaveGames s3://game-files-maximumpigs/palworld/SaveGames --recursive      